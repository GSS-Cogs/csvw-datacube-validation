
# --------------------
# Global configuration
options:

  # list of sources for functions that make us the validation library
  # there's a build in library to start us off, but you (will...not yet) be able to point to github etc
  # to extend capability (i.e for non generic use cases).
  module_sources:
    - /library  # default/built-in


# ------------------------------
# Defining Stages of validation:
stages:

  basic_structure_linting:
      execution_order: 1
      description: run basic csvlint validation relevant to this dataset
      stop_on_fail: false
      steps:
        - csvlint

  resources_are_accessible:
      execution_order: 2
      description: confirm that our required csv and json sources can be accessed before we commence more detailed checks
      stop_on_fail: false
      steps:
        - all_http_field_responses_match:
            status_codes: 200
        - all_referenced_json_documents_load:
            follow_children: true
        - all_referenced_csv_files_load:
            follow_children: true

  confirm_columns_csv_integrity:
      execution_order: 3
      description: confirm the cogs csv reference data for this dataset is correctly formatted
      stop_on_fail: false
      steps:
        - assert_columns_csv_resources_are_correctly_formatted
        - assert_codelist_csv_resources_are_correctly_formatted
        #TODO - assert_components_csv_resources_are_correctly_formatted

  confirm_csv_resources_exist:
      execution_order: 4
      description: confirm that fields that are bridging multiple resources match correctly
      stop_on_fail: false
      steps:
        - assert_field_mapping_between_tableschema_and_columns_csv
        - assert_components_csv_resources_are_correctly_mapped
        # TODO - assert_columns_csv_codelist_entries_in_metadata_schema